FROM SQL to JavaScript, the SEQUELIZE ORM (Object Relational Mapping)

-- Security and efficiency built in
-- Makes making changes to a SQL DB really easy;  creates a system of version control for your database.
-- Preserves data through changes to DB.

-Models is the new schema
-Seeds is the old Seeds
-Migrations are generated by Sequelize. Create, drop, and modify tables using JavaScript. 

PRACTICE: AA11-Express-Sequelize
- create a project 
- initialize it for node
- install express  npm package
- create a basic express server `app` with one app get requests
- optional: install express.router() and move route to it's own file
-install sqlite3, sequelize, and sequelize-cli
-create a `.sequelizerc` file
-init sequelize-cli using `npx sequelize init`


** Migrations
-up: do
-down: undo

Create Migrations:
`npx sequelize-cli migration:generate --name <name of table>`

Primary Key ID example:
id: {
          allowNull: false,
          autoIncrement: true,
          primaryKey: true,
          type: Sequelize.INTEGER
        }

Run Migrations:
`npx dotenv sequelize db:migrate`

Undo last Migration:
`npx dotenv sequelize db:migrate:undo`

Undo ALL Migrations:
`npx dotenv sequelize db:migrate:undo:all`

*** Links to Sequelize Documentation ***

Model Basics: https://sequelize.org/docs/v6/core-concepts/model-basics/

Data Types: 
https://sequelize.org/docs/v6/core-concepts/model-basics/#data-types


Migrations: https://sequelize.org/docs/v6/other-topics/migrations/
QueryInterface:
https://sequelize.org/api/v6/class/src/dialects/abstract/query-interface.js~queryinterface

Database Constraints:
https://sequelize.org/docs/v6/core-concepts/validations-and-constraints/

'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.createTable('Colors', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      name: {
        type: Sequelize.STRING
      }
    });
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.dropTable('Colors');
  }
};
